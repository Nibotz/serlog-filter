<!DOCTYPE html>
<html>
<head>
    <title>filter test</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="jquery/jquery-3.6.3.min.js"></script>
    <script src="jquery/jstree.min.js"></script>
    <link rel="stylesheet" href="dist/style.min.css">
    <link rel="stylesheet" href="css/filter_styles.css">
</head>
<body>

<div class="stuff">
    <h2>Services</h2>
    <div class="products">
        <!-- products shown here -->
    </div>
</div>

<div class="filters">
    <h2>Filters</h2>
    <div class="filter">
        <h3>Service available</h3>
        <input type="checkbox" name="available" value="locally"> Locally
        <input type="checkbox" name="available" value="online"> Online
    </div>
    <div class="filter">
        <h3>Price(&euro;)</h3>
        <input type="number" name="price1">
        <span>-</span>
        <input type="number" name="price2">
    </div>
    <div class="filter">
        <h3>Created between</h3>
        <input type="date" name="created1">
        <span>-</span>
        <input type="date" name="created2">

        <h3>Edited between</h3>
        <input type="date" name="edited1">
        <span>-</span>
        <input type="date" name="edited2">
    </div>
    <div class="filter">
        <h3>Categories</h3>
        <input type="checkbox" id="selectAll">Select all
        <div id="tree-filter">
            <!-- tree filter shown here -->
        </div>
    </div>
    <br>
</div>

<script>
$(document).ready(function(){
    // intalize variables
    const LOAD_LIMIT = 5;
    var loaded = 0;
    var max_loaded = false;
    // tree filter made
    $("#tree-filter").jstree({
        "core": {
            "data": {
                "method": "POST",
                "data": {
                    "get_data": 1
                },
                "url": "make_tree.php",
                "dataType": "json"
            }
        },
        "plugins": ["checkbox", "wholerow"],
        "checkbox": {
            "keep_selected_style": 0
        }
    });
    const tree_filter = $("#tree-filter").jstree();
    // other filters made (after tree filter)
    $("#tree-filter").on("ready.jstree", function(){
        filter_change();
    });
    // change filter
    function filter_change(new_filters = true){
        if (new_filters) {
            loaded = 0;
            max_loaded = false;
            $(document).scrollTop(0);
        }
        // arrays are made
        let locality = [];
        $("input[name='available']:checked").each(function(){
            locality.push(this.value);
        });
        let categories = tree_filter.get_selected();
        // ajax call
        $.ajax({
            url: "process_data.php",
            method: "POST",
            data: {
                get_data: 1,
                load_start: loaded,
                load_limit: LOAD_LIMIT,
                locality: locality,
                categories: JSON.stringify(categories).slice(1, -1),
                price1: $("input[name='price1']").val(),
                price2: $("input[name='price2']").val(),
                created1: $("input[name='created1']").val(),
                created2: $("input[name='created2']").val(),
                edited1: $("input[name='edited1']").val(),
                edited2: $("input[name='edited2']").val()
            },
            success:function(rText){
                html = process_products(rText);
                if (html === "") {
                    max_loaded = true;
                    if (new_filters) {
                        $("div.products").html("<p class='empty'>*No data found</p>");
                    }
                } else {
                    if (new_filters) {
                        $("div.products").html(html);
                    } else {
                        $("div.products").append(html);
                    }
                    loaded += LOAD_LIMIT;
                }
            }
        });
    }
    // process products
    function process_products(json_filters){
        let products = JSON.parse(json_filters);
        let html = "";
        // count products
        let product_count = [];
        $.each(tree_filter.get_json("#", {flat: true}), function(){
            product_count[this.id] = 0;
        });
        // loop trough products
        $.each(products, function(){
            product_count[this.id]++; // count products by category id
            // style products
            html += "<div>"; // div start
            html += "<h3>" + this.title + "</h3>"; // title
            html += "<p><b>categorization:</b> "; // category start
            if (this.id == null) {
                html += "none"; // no category
            } else {
                html += tree_filter.get_path(this.id, " --> "); // category tree
            }
            html += "</p><br>"; // category end
            html += "<p><b>created:</b> " + this.created + "</p>"; // created
            html += "<p><b>edited:</b> " + this.edited + "</p>"; // edited
            html += "<p><b>locality:</b> " + this.locality_csv.replace(/_/g, "") + "</p>"; // locality
            html += "<p><b>price:</b> "; // price start
            if (this.minprice === null) {
                html += "none"; // no price
            } else if (this.minprice == this.maxprice) {
                html += this.minprice + " &euro;"; // same price
            } else {
                html += this.minprice + " - " + this.maxprice + " &euro;"; // price range
            }
            html += "</p>"; // price end
            html += "</div>"; // div end
        });
        // add child products to count
        function add_childs(node){
            let child_count = 0;
            $.each(node.children, function(){
                child_count += add_childs(this);
            });
            let num = product_count[node.id] += child_count;
            //tree_filter.set_text(node, node.text + " (" + num + ")");
            return num;
        }
        $.each(tree_filter.get_json(), function(){
            add_childs(this);
        });
        // return styled products
        return html;
    }
    // select all button
    $("#selectAll").change(function(){
        if ($(this).is(":checked")) {
            tree_filter.check_all();
        } else {
            tree_filter.uncheck_all();
        }
    })
    // get filter change
    $("input").change(function(){
        filter_change();
    });
    // get tree filter change
    $("#tree-filter").on("changed.jstree", function(n, e){
        if (e.action === "select_node" || e.action === "deselect_node") {
            filter_change();
        }
    }).jstree();
    // get when scrolled to bottom
    $(window).scroll(function(){
        if(!max_loaded && $(document).height() - $(window).height() - $(window).scrollTop() < 1) {
            filter_change(false);
        }
    });
});

</script>

</body>
</html>
