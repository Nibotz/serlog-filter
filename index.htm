<!DOCTYPE html>
<html>
<head>
    <title>filter test</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="jquery/jquery-3.6.3.min.js"></script>
    <script src="jquery/jstree.min.js"></script>
    <link rel="stylesheet" href="dist/style.min.css">
    <link rel="stylesheet" href="css/general_styles.css">
    <link rel="stylesheet" href="css/make_service_styles.css">
    <link rel="stylesheet" href="css/filter_styles.css">
    <link rel="stylesheet" href="css/service_styles.css">
</head>
<body>


<div id="tab-button-holder">
    <h2>Tabs</h2>
    <button class="open-tab static-tab" id="open-tab-main">services</button>
    <button class="open-tab static-tab" id="open-tab-make">make service</button>
    <!-- new tab buttons here -->
</div>

<div id="tab-holder">
    <div class="tab" id="tab-main">
        <div id="service-holder">
            <!-- services shown here -->
        </div>
        <div id="filter-holder">
            <h2>Filters</h2>
            <div class="filter">
                <h3>Service available</h3>
                <input type="checkbox" name="locality" value="locally"><span> Locally</span>
                <input type="checkbox" name="locality" value="online"><span> Online</span>
            </div>
            <div class="filter">
                <h3>Price(&euro;)</h3>
                <input name="price1">
                <span>-</span>
                <input name="price2">
            </div>
            <div class="filter">
                <h3>Created between</h3>
                <input type="date" name="created1">
                <span>-</span>
                <input type="date" name="created2">
        
                <h3>Edited between</h3>
                <input type="date" name="edited1">
                <span>-</span>
                <input type="date" name="edited2">
            </div>
            <div class="filter">
                <h3>Categories</h3>
                <input type="checkbox" id="selectAll">
                <span id="selectAll-text"></span>
                <div id="tree-filter">
                    <!-- tree filter shown here -->
                </div>
            </div>
            <br>
        </div>
    </div>
    <div class="tab" id="tab-make">
        <h2>Add service</h2>
        <h3>Upload images</h3>
        <input type="file" name="image">
        <h3>Categorization</h3>
        <div id="make-tree_cat">
            <!-- tree categories here -->
        </div>
        <h3>Contact information</h3>
        <h4>Private email</h4>
        <input type="email" name="email" placeholder="johndoe@example.com">
        <h4>Website</h4>
        <input type="url" name="website" placeholder="Website (optional)">
        <h4>Service available</h4>
        <input type="checkbox" name="locality" value="locally"><span> locally</span>
        <input type="checkbox" name="locality" value="online"><span> online</span>
        <h4>Location</h4>
        <input type="text" name="location" placeholder="Enter street or city">
        <h4>Title</h4>
        <input type="text" name="title" placeholder="Title">
        <h4>Description</h4>
        <textarea name="description" placeholder="Description" cols="40" rows="10"></textarea>
        <br><br>
        <button id="make-reset">Reset</button>
        <button id="make-upload">Upload media</button>
        <br><br>
    </div>
    <!-- new tabs here -->
</div>

<script>
$(document).ready(function(){
    // services stored
    var services = [];
    // tab variables
    var current_tab = "";
    var other_tabs = new Set();
    // trees intalized
    $("#tree-filter").jstree({
        core: {
            data: {
                method: "POST",
                data: {get_data: 1},
                url: "php/make_tree.php",
                dataType: "json"
            }
        },
        plugins: ["checkbox", "wholerow"],
        checkbox: {keep_selected_style: 0}
    });
    const tree_filter = $("#tree-filter").jstree(true);
    $("#make-tree_cat").jstree({
        core: {
            multiple: 0,
            data: {
                method: "POST",
                data: {get_data: 1},
                url: "php/make_tree.php",
                dataType: "json"
            }
        },
        plugins: ["checkbox", "wholerow"],
        checkbox: {keep_selected_style: 0, three_state: 0}
    });
    const choose_category = $("#make-tree_cat").jstree(true);
    // other filters intalized (after tree filter)
    $("#tree-filter").on("ready.jstree", function() {
        filter_change();
    });
    // load tabs
    intalize_tabs();
    function intalize_tabs() {
        // variables from url
        let url = new URLSearchParams(location.search);
        current_tab = url.has("current_tab") ? url.get("current_tab") : "main";
        other_tabs.clear();
        // tab ids
        let ids = isNaN(current_tab) ? "" : current_tab + ",";
        if (url.has("other_tabs")) {
            url.get("other_tabs").split(",").forEach(val => {other_tabs.add(val);});
            ids += url.get("other_tabs") + ",";
        }
        // create new tabs from ids
        if (ids != "") {
            $.ajax({
                url: "php/service_information.php",
                method: "POST",
                data: {
                    get_data: 1,
                    ids: ids.slice(0,-1)
                },
                success:function(rText) {
                    create_tabs(rText);
                    $("#tab-" + current_tab).addClass("active-tab");
                    $("#open-tab-" + current_tab).addClass("active-tab");
                }
            });
        } else {
            $("#tab-" + current_tab).addClass("active-tab");
            $("#open-tab-" + current_tab).addClass("active-tab");
        }
    }
    // FILTERS + SERVICES
    // change filter
    function filter_change(){
        // locality
        let locality = [];
        $("#filter-holder input[name='locality']:checked").each(function(){
            locality.push(this.value);
        });
        // ajax call
        $.ajax({
            url: "php/filter_services.php",
            method: "POST",
            data: {
                get_data: 1,
                load_limit: 30,
                locality: locality,
                price1: $("#filter-holder input[name='price1']").val(),
                price2: $("#filter-holder  input[name='price2']").val(),
                created1: $("#filter-holder input[name='created1']").val(),
                created2: $("#filter-holder input[name='created2']").val(),
                edited1: $("#filter-holder input[name='edited1']").val(),
                edited2: $("#filter-holder input[name='edited2']").val()
            },
            success:function(rText){
                services = JSON.parse(rText);
                update_services();
            }
        });
    }
    // process services
    function update_services() {
        let html = "";
        // reset service count
        let service_count = [];
        $.each(tree_filter.get_json("#", {flat: true}), function(){
            service_count[this.id] = 0;
            // remove count from the end
            if (this.text.endsWith(")")) {
                tree_filter.set_text(this, this.text.slice(0, this.text.lastIndexOf(" ")));
            }
        });
        // get selected services
        const selected_services = new Set(tree_filter.get_selected());
        let num = 0;
        // loop trough services
        for (let i = 0; i < services.length; i++) {
            const val = services[i];
            service_count[val.cat_id]++;
            // filter selected services
            if (selected_services.size && !selected_services.has(val.cat_id)) {continue;}
            num++;
            // style services
            html += "<div class='service' id='ser-" + val.id + "'>";
            // title
            html += "<div class='top'><h3 class='service-name'>" + val.title + "</h3></div>";
            // description
            html += "<div class='middle'><p>" + val.description + "</p></div>";
            // category
            html += "<div class='bottom'><p class='name' style='width:fit-content;'>Categorization&ensp;</p><p>";
            if (val.cat_id == null) {html += "none";} // no category
            else {html += tree_filter.get_path(val.cat_id, " > ");} // category tree
            html += "</p></div>";
            // left side
            html += "<div class='corner'>";
            html += "<p class='name'>Price</p><p>"; // price start
            if (val.minprice === null) {html += "none";} // no price
            else if (val.minprice == val.maxprice) {html += val.minprice + " &euro;";} // same price
            else {html += val.minprice + " - " + val.maxprice + " &euro;";} // price range
            html += "</p><br>"; // price end
            html += "<p class='name'>Locality</p><p>" + val.locality + "</p></div>"; // locality
            // right side
            html += "<div class='corner'>";
            html += "<p class='name'>Created</p><p>" + val.created + "</p><br>"; // created
            html += "<p class='name'>Edited</p><p>" + val.edited + "</p><br>"; // edited
            html += "<p class='name'>ID</p><p>" + val.id + "</p><br>"; // id
            html += "</div></div>";
        }
        //html = "<p>services found: " + num + "</p>" + html;
        // add child services to count
        function add_childs(node){
            let child_count = 0;
            $.each(node.children, function(){
                child_count += add_childs(this);
            });
            let num = service_count[node.id] += child_count;
            tree_filter.set_text(node, node.text + " (" + num + ")");
            return num;
        }
        // total number of services
        num = 0;
        $.each(tree_filter.get_json(), function(){
            num += add_childs(this);
        });
        $("#selectAll-text").html("Select all (" + num + ")");
        // add styled services
        $("#service-holder").html(html);
        // get when service is pressed
        $("#tab-main div.service").on("click", function(){
            new_tab(this.id.slice(4));
        });
    }
    // SERVICE MAKING
    $("#make-reset").on("click", make_clear);
    $("#make-upload").on("click", function() {
        let locality = [];
        $("#tab-make input[name='locality']:checked").each(function(){
            locality.push(this.value);
        });
        let title = $("#tab-make input[name='title']").val().trim();
        let js_tree_cat = choose_category.get_selected()[0];
        let location = $("#tab-make input[name='location']").val();
        let email_srv = $("#tab-make input[name='email']").val();
        let url = $("#tab-make input[name='website']").val();
        let description = $("#tab-make textarea[name='description']").val().replaceAll("\n", "<br>");
        // validition
        if (!locality.length || !title || !js_tree_cat || !email_srv || !location || !description) {
            alert("not a valid service!");
            return;
        }
        $.ajax({
            url: "php/make_service.php",
            method: "POST",
            data: {
                set_data: 1,
                title: title,
                locality: locality.toString(),
                js_tree_cat: js_tree_cat.slice(5),
                location: location,
                email_srv: email_srv,
                url: url,
                description: description
            },
            success:function(rText) {
                make_clear();
            }
        });
    });
    // clear input field
    function make_clear() {
        $("#tab-make input[name='locality']:checked").each(function(){
            this.checked = false;
        });
        choose_category.deselect_all(true);
        //$("#tab-make #make-tree_cat")[0].value = "";
        $("#tab-make input[name='email']")[0].value = "";
        $("#tab-make input[name='website']")[0].value = "";
        $("#tab-make input[name='location']")[0].value = "";
        $("#tab-make input[name='title']")[0].value = "";
        $("#tab-make textarea[name='description']")[0].value = "";
    }
    // BUTTON ACTION
    // select all button
    $("#selectAll").change(function(){
        if ($(this).is(":checked")) {
            tree_filter.check_all();
        } else {
            tree_filter.uncheck_all();
        }
        update_services();
    });
    // get filter change
    $("#tab-main input:not(#selectAll)").on("change", filter_change);
    // get tree filter change
    $("#tree-filter").on("changed.jstree", function(n, e){
        if (e.action === "select_node" || e.action === "deselect_node") {
            update_services();
        }
    }).jstree();
    // TAB MAKING STUFF
    // opening main tab
    $("button.static-tab").on("click", function(){
        open_tab(this.id.slice(9));
    });
    // create new tab
    function create_tabs(text) {
        let sdata = JSON.parse(text);
        let html = "";
        // style each tab
        sdata.forEach(val => {
            html += "<div class='tab service-tab' id='tab-" + val.id + "'>";
            html += "<h2>" + val.title + "</h2>";
            html += "<p>" + val.description + "</p>";
            html += "<button class='delete-service' id='service-del-" + val.id + "'>delete service</button>";
            html += "<button class='add-subservice' id='service-del-" + val.id + "'>add subservice</button>";
            html += "</div>";
        });
        // append new tabs
        $("#tab-holder").append(html);
        // button event handlers
        $("button.delete-service").on("click", function() {
            let id = this.id.slice(12);
            if (confirm("Are you sure?\nYou cannot undo this action.")) {
                $.ajax({
                    url: "php/delete_service.php",
                    method: "POST",
                    data: {
                        set_data: 1,
                        id: id
                    },
                    success:function(rText) {
                        delete_tab(id);
                        filter_change();
                    }
                });
            }
        });
        $("button.add-subservice").on("click", function() {
            alert("not implemented yet...");
        });
        // make buttons for each tab
        sdata.forEach(val => {
            let id = val.id;
            // tab buttons made
            let tab = $("<button class='open-tab' id='open-tab-" + id + "'></button>").text("tab " + id); // tab button
            let del = $("<button class='del-tab' id='del-tab-" + id + "'></button>").text("X"); // delete button
            // delete tab event
            $(del).on("click", function() {delete_tab(id);});
            // open tab event
            $(tab).on("click", function() {open_tab(id);});
            // add new buttons
            $("#tab-button-holder").append(tab, del);
        });
    }
    // handle deleting tab
    function delete_tab(id) {
        $("#del-tab-" + id).remove();
        $("#open-tab-" + id).slideUp("fast", function(){
            if (id == current_tab) {
                $("#tab-main").addClass("active-tab");
                $("#open-tab-main").addClass("active-tab");
                current_tab = "main";
            }
            other_tabs.delete(id);
            update_url();
            $("#open-tab-" + id).remove();
            $("#tab-" + id).remove();
        });
    }
    // handle greating new tab
    function new_tab(id) {
        // make a new tab
        if (!other_tabs.has(id)) {
            $.ajax({
                url: "php/service_information.php",
                method: "POST",
                data: {
                    get_data: 1,
                    ids: id
                },
                success:function(rText) {
                    create_tabs(rText);
                    open_tab(id);
                }
            });
        // open the old tab
        } else {
            open_tab(id);
        }
    }
    // handle changing tab
    function open_tab(id) {
        if (current_tab != id) {
            // old tab
            if ($("#open-tab-" + current_tab).hasClass("active-tab")) {
                $("#tab-" + current_tab).removeClass("active-tab");
                $("#open-tab-" + current_tab).removeClass("active-tab");
                if (!isNaN(current_tab)) {
                    other_tabs.add(current_tab);
                }
            }
            // new tab
            $("#tab-" + id).addClass("active-tab");
            $("#open-tab-" + id).addClass("active-tab");
            if (other_tabs.has(id)) {
                other_tabs.delete(id);
            }
            current_tab = id;
            update_url();
        }
    }
    // update url
    function update_url() {
        let par = new URLSearchParams(location.search);
        par.set("current_tab", current_tab);
        if (other_tabs.size == 0) {
            par.delete("other_tabs");
        } else {
            let ids = "";
            other_tabs.forEach(val => {ids += val + ",";});
            par.set("other_tabs", ids.slice(0,-1));
        }
        history.pushState(null, "", "?" + par.toString());
    }
    // history change
    addEventListener("popstate", function() {
        // remove each button
        $("#tab-button-holder button:not(.static-tab)").each(function () {
            this.remove();
        });
        // remove each service tab
        $("#tab-holder .service-tab").each(function() {
            this.remove();
        });
        // unactive active tabs
        $(".active-tab").each(function() {
            $(this).removeClass("active-tab");
        });
        intalize_tabs();
    });
});

</script>

</body>
</html>
